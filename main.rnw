
---

## Annotated Code Files

### main.rnw

Below is the commented version of **main.rnw**. The comments explain each section and code chunk.

```latex
\documentclass{beamer}
\usepackage{graphicx}
\usepackage{setspace}
\usepackage{amsmath}
\usepackage{hyperref}
\usepackage{float}
\usepackage{xcolor}

\title{Analysis of U.S. Flight Data from January-April 2008}
\date{\today}

\begin{document}

\frame{\titlepage}

<<echo=FALSE,message=FALSE,fig.width=8,fig.height=4,warning=FALSE>>=
# Load required libraries using a helper function
run_libraries <- function(){
  library(RSQLite)
  library(ggplot2)
  library(dplyr)
}
suppressMessages(run_libraries())

# Set the working directory (adjust the path as needed)
setwd("C:/Users/78641/Downloads")

# Connect to the SQLite database containing flight data
con <- dbConnect(RSQLite::SQLite(), dbname="final_project.db")
# dbListTables(con)
# dbListFields(con, "main_data") 
@

<<echo=FALSE,message=FALSE,fig.width=8,fig.height=4,warning=FALSE>>=
library(dplyr)
library(ggplot2)
library(RSQLite)
library(stringr)
library(nortest)
library(MASS)
# Define an SQL query to select flight-related fields
Query_data="SELECT Origin,Dest,Deptime,DepDelay,airline
            FROM main_data"
# Retrieve the data from the database and remove rows with missing values
result= dbGetQuery(con, Query_data)
result= na.omit(result)
@

\begin{frame}{Category}
\setstretch{1.5}
\Large{{\textbf{Part1: Introduction}}}\\[0.5cm] 
\Large{{\textbf{Part2: Departure delay time analysis}}}\\[0.5cm] 
\Large{{\textbf{Part3: Analysis of customers’ review}}}\\
\setstretch{1}
\end{frame}

\begin{frame}
\frametitle{Introduction}
Problem Overview:\\
(1) Which one of our variables is the most significant factor for total delay?\\
(2) What information does the distribution of flight delays provide to travelers?\\
(3) How do delays impact customer satisfaction across different airlines and airports?\\
\end{frame}

\begin{frame}{Description of Dataset}
\begin{table}
  \centering
  \scalebox{0.6}{
  \begin{tabular}{|l|r|}
  \hline
  Variable Name & Description\\
  \hline
  Year  & Year of flight (YYYY) \\
  Month  & Month of flight (1-12) \\
  DayofMonth  & Day of flight (1-31) \\
  DayofWeek  & Weekday (1 = Monday, …, 7 = Sunday) \\
  DepTime  & Actual departure time (local, hhmm) \\
  FlightNum  & Flight number \\
  ArrDelay  & Arrival delay (minutes) \\
  DepDelay  & Departure delay (minutes) \\
  Origin  & Origin IATA airport code \\
  Dest  & Destination IATA airport code \\
  Distance  & Distance traveled (miles) \\
  Cancelled  & 1 if cancelled, 0 otherwise \\
  Diverted  & 1 if diverted, 0 otherwise \\
  CarrierDelay, WeatherDelay, NASDelay, SecurityDelay  & Delay times (minutes) \\
  LateAircraftDelay  & Delay due to late aircraft (minutes) \\
  \hline
  \end{tabular}
  }
  \caption{Dataset variables and descriptions}\label{tab:simple-table}
\end{table}
\end{frame}

\begin{frame}{2a}
\frametitle{Categories of Delay}
\begin{figure}
<<echo=FALSE,message=FALSE,fig.width=8,fig.height=4,warning=FALSE>>=
# Define SQL queries to count delay events for each category
query_carrier <- "SELECT CarrierDelay, COUNT(*) FROM main_data WHERE CarrierDelay IS NOT NULL AND CarrierDelay != 0"
query_weather <- "SELECT WeatherDelay, COUNT(*) FROM main_data WHERE WeatherDelay IS NOT NULL AND WeatherDelay != 0"
query_nas <- "SELECT NASDelay, COUNT(*) FROM main_data WHERE NASDelay IS NOT NULL AND NASDelay != 0"
query_security <- "SELECT SecurityDelay, COUNT(*) FROM main_data WHERE SecurityDelay IS NOT NULL AND SecurityDelay != 0"
query_late_aircraft <- "SELECT LateAircraftDelay, COUNT(*) FROM main_data WHERE LateAircraftDelay IS NOT NULL AND LateAircraftDelay != 0"

# Execute the queries
count_Carrier <- as.numeric(dbGetQuery(con, query_carrier))
count_Weather <- as.numeric(dbGetQuery(con, query_weather))
count_NAS <- as.numeric(dbGetQuery(con, query_nas))
count_Security <- as.numeric(dbGetQuery(con, query_security))
count_LateAircraft <- as.numeric(dbGetQuery(con, query_late_aircraft))

# Combine the counts into a vector and define the corresponding categories
c <- c(count_Carrier[2], count_LateAircraft[2], count_NAS[2], count_Security[2], count_Weather[2])
category <- c("Carrier", "LateAircraft", "NAS", "Security", "Weather")

data1 <- arrange(data.frame(category, c), c)

# Create a lollipop chart for the delay categories
lollipops <- ggplot(data1, aes(x=reorder(category, c), y=c)) + 
  geom_segment(aes(xend=category, yend=0), color="skyblue", linewidth=1.2) + 
  geom_point(color="dodgerblue", size=3) + 
  theme_minimal() + 
  coord_flip() + 
  labs(x="", y="Count number of each category") +
  theme(axis.text.y = element_text(angle = 0, hjust=1), 
        plot.title.position = "panel", 
        plot.title = element_text(hjust = 0.5))+
  scale_y_continuous(limits = c(0, 350000), breaks = seq(0, 350000, 50000))
suppressWarnings(print(lollipops))
@
\caption{Lollipop chart of flight delay categories}
\end{figure}
\end{frame}

\begin{frame}{2b}
\frametitle{Departure delay time analysis}
\includegraphics[width=\textwidth]{density shiny.png}
\end{frame}

\begin{frame}{2b}
\frametitle{Departure delay time analysis}
\begin{figure}
<<echo=FALSE,fig.width=8,fig.height=4,warning=FALSE>>=
library(ggplot2)
con <- dbConnect(RSQLite::SQLite(), dbname="final_project.db")
res <- dbSendQuery(conn = con, "
                    SELECT Origin, avg(DepDelay) AS Avg_Dep_Delay,
                     count(DepDelay) AS total_flights,
                     1 - (SUM(CASE WHEN DepDelay IS NULL OR DepDelay <= 0 THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) AS perc_delayed
                    FROM main_data
                    GROUP By Origin;
                    ")
DepDelay_airports <- dbFetch(res, -1)
dbClearResult(res)

plothex2 <- ggplot(DepDelay_airports, aes(x = perc_delayed, y = Avg_Dep_Delay)) +
  geom_hex() + geom_smooth(method = "rlm") +
  xlab("% of All Outbound Flights Delayed") + ylab("Average Dep. Delay")
suppressMessages(suppressWarnings(print(plothex2)))
@
\caption{Hex plot of average departure delays by origin}
\end{figure}
\end{frame}

\begin{frame}{2b}
\frametitle{Departure delay time analysis}
\begin{table}
<<echo=FALSE,message=FALSE,fig.width=8,fig.height=4,warning=FALSE>>=
library(knitr)
library(kableExtra)
level_3= levels(factor(result$airline))
select_com= function(data,level){
  c= list()
  for (i in 1:length(level)){
    c[[i]]= data[which(data$airline== level[i]),]
  }
  return(c)
}
get_com= select_com(result,level_3)

initial= data.frame()
performance= 0
for (i in 1:length(level_3)){
    count=0
    row= get_com[[i]] %>%
         summarize(Dep_mean = mean(DepDelay),
                   Dep_var= var(DepDelay))
    build_data= data.frame(airlines=level_3[i])
    build_data$Dep_mean =row$Dep_mean
    build_data$Dep_var =row$Dep_var
  
    # Calculate on-time performance based on one standard deviation from the mean
    per_data= get_com[[i]]$DepDelay
    for (k in 1:length(per_data)){
      if (abs(per_data[k]-build_data$Dep_mean)<=sqrt(build_data$Dep_var)){
        count= count+1
      }
    }
    performance=count/length(per_data)
    build_data$on_time_performance= performance
    initial= bind_rows(initial,build_data)
}
library(xtable)
initial= initial%>%arrange(desc(on_time_performance))
names(initial)[4]= "rate"
initial$Dep_mean = round(initial$Dep_mean,3)
initial$Dep_var = round(initial$Dep_var,1)
initial$rate = round(initial$rate,3)
table_latex <- kable(head(initial, 15), format = "latex")
table_latex
@
\caption{Top 15 airlines by on-time performance}
\end{table}
\end{frame}

\begin{frame}{2c}
\frametitle{Departure delay time analysis}
\includegraphics[width=\textwidth]{Airline shiny.png}
\end{frame}

\begin{frame}{2c}
\frametitle{Departure delay time analysis}
\begin{figure}
<<echo=FALSE,fig.width=8,fig.height=4,warning=FALSE>>=
ave_delay <- dbGetQuery(con, "
  SELECT AVG(d.delay_time) AS mean_delay, a.state
  FROM (
  SELECT Origin AS IATA, DepDelay AS delay_time
  FROM main_data
  WHERE DepDelay >= -5
  ) d
  LEFT JOIN (
  SELECT iata_code AS IATA, region_name AS state
  FROM airport_codes
  ) a
  ON d.IATA = a.IATA
  WHERE a.state IS NOT NULL
  GROUP BY a.state
  ")
                        
suppressMessages(library(usmap))
suppressMessages(library(ggplot2))
suppressMessages(library(viridis))
colors <- viridis(3)
plotmap <- plot_usmap(data = ave_delay, values = "mean_delay") + 
  scale_fill_gradientn(colors = colors,
                       breaks = c(5, 11, 17, 24),
                       limits = c(5, 24),
                       trans = "identity") +
  labs(fill = "Average Delay Time") +
  theme(legend.position = "right")
suppressMessages(suppressWarnings(print(plotmap)))
@
\end{figure}

\begin{itemize}
\item Weather Conditions
\item Air Traffic Congestion
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{Section 3: International Comparisons by Text Analysis}
Using customer reviews scraped from SkyTrax (2007-2015)...
\begin{itemize}
  \item Which words appear most frequently in reviews mentioning delays?
  \item How do different airlines and airports compare in terms of sentiment?
\end{itemize}
\end{frame}

\begin{frame}
First, examine word frequency on reviews that mention delays.
\begin{itemize}
  \item Methodology 
  \item Results:
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{Word Frequency: Airports}
\begin{center}
<<fig.width=3, fig.height=3, echo=FALSE, warning=FALSE>>=
run_lib <- function(){
  library(RSQLite)
  library(ggplot2)
  library(dplyr)
  library(stringr)
  library(wordcloud)
  library(tm)
  library(tidytext)
  library(textdata)
} 
suppressWarnings(suppressMessages(run_lib()))
con <- dbConnect(RSQLite::SQLite(), dbname="final_project.db")

res <- dbSendQuery(conn = con, "
                    SELECT airport_name as Airport, author_country as Nationality,
                    date_visit as Date, content as Review, overall_rating as Rating
                    FROM airport_reviews;
                    ")
reviews <- dbFetch(res, -1)
dbClearResult(res)

delay_reviews <- reviews %>%
  filter(str_detect(reviews$Review, "[Dd][Ee][Ll][Aa][Yy]"))

text <- tolower(paste(delay_reviews$Review, collapse = " "))
corpus <- Corpus(VectorSource(text))
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, removeWords, stopwords("en"))
word_freq <- colSums(as.matrix(DocumentTermMatrix(corpus)))
top_words <- head(sort(word_freq, decreasing = TRUE), 100)
wordcloud(words = names(top_words), freq = top_words, random.order = FALSE,
          colors = brewer.pal(8, "Dark2"))
@
\end{center}
\end{frame}

\begin{frame}
\frametitle{Sentiment Analysis: Airports}
\begin{table}[H]
\centering
\begin{tabular}{rlr}
  \hline
 & airport & sentiment score \\ 
  \hline
1 & singapore-changi-airport & 1255.00 \\ 
  2 & hong-kong-airport & 883.00 \\ 
  3 & delhi-airport & 762.00 \\ 
  4 & incheon-airport & 736.00 \\ 
  5 & vancouver-airport & 524.00 \\ 
  6 & london-heathrow-airport & 508.00 \\ 
  7 & klia-kuala-lumpur-airport & 475.00 \\ 
  8 & amsterdam-schiphol-airport & 441.00 \\ 
  9 & tokyo-narita-airport & 404.00 \\ 
  10 & kansai-airport & 396.00 \\ 
  11 & helsinki-vantaa-airport & 376.00 \\ 
  12 & taipei-taoyuan-airport & 370.00 \\ 
  13 & zurich-airport & 340.00 \\ 
  14 & athens-airport & 326.00 \\ 
  15 & detroit-airport & 313.00 \\ 
  16 & auckland-airport & 294.00 \\ 
  17 & munich-airport & 286.00 \\ 
  18 & copenhagen-airport & 279.00 \\ 
  19 & \textcolor{red}{san-francisco-airport} & 279.00 \\ 
  20 & doha-airport & 258.00 \\ 
   \hline
\end{tabular}
\caption{Best sentiment analysis results by airport (American airport highlighted in red)} 
\end{table}
\end{frame}

\begin{frame}
\frametitle{Sentiment Analysis: Airports}
\begin{table}[H]
\centering
\begin{tabular}{rlr}
  \hline
 & airport & sentiment score \\ 
  \hline
1 & london-stansted-airport & -906.00 \\ 
  2 & luton-airport & -891.00 \\ 
  3 & paris-cdg-airport & -825.00 \\ 
  4 & frankfurt-main-airport & -310.00 \\ 
  5 & \textcolor{red}{miami-airport} & -282.00 \\ 
  6 & bristol-airport & -273.00 \\ 
  7 & \textcolor{red}{newark-airport} & -261.00 \\ 
  8 & \textcolor{red}{houston-george-bush-intercontinental-airport} & -249.00 \\ 
  9 & perth-airport & -248.00 \\ 
  10 & leeds-bradford-airport & -241.00 \\ 
  11 & manchester-airport & -231.00 \\ 
  12 & edinburgh-airport & -162.00 \\ 
  13 & dalaman-airport & -134.00 \\ 
  14 & sharm-el-sheikh-airport & -133.00 \\ 
  15 & \textcolor{red}{washington-dulles-airport} & -126.00 \\ 
  16 & \textcolor{red}{los-angeles-lax-airport} & -123.00 \\ 
  17 & rome-fiumicino-airport & -123.00 \\ 
  18 & bordeaux-airport & -122.00 \\ 
  19 & guangzhou-airport & -122.00 \\ 
  20 & bournemouth-airport & -105.00 \\ 
   \hline
\end{tabular}
\caption{Worst sentiment analysis results by airport} 
\end{table}
\end{frame}

\begin{frame}
\frametitle{Sentiment Analysis: Airlines}
\begin{table}[ht]
\centering
\begin{tabular}{rlr}
  \hline
 & airline & sentiment score \\ 
  \hline
1 & british-airways & 5258.00 \\ 
  2 & emirates & 4968.00 \\ 
  3 & qatar-airways & 4678.00 \\ 
  4 & qantas-airways & 4613.00 \\ 
  5 & lufthansa & 4214.00 \\ 
  6 & singapore-airlines & 3719.00 \\ 
  7 & cathay-pacific-airways & 3684.00 \\ 
  8 & malaysia-airlines & 3184.00 \\ 
  9 & turkish-airlines & 2921.00 \\ 
  10 & korean-air & 2837.00 \\ 
  11 & thai-airways & 2831.00 \\ 
  12 & asiana-airlines & 2800.00 \\ 
  13 & garuda-indonesia & 2757.00 \\ 
  14 & eva-air & 2738.00 \\ 
  15 & jet-airways & 2646.00 \\ 
  16 & klm-royal-dutch-airlines & 2558.00 \\ 
  17 & virgin-atlantic-airways & 2552.00 \\ 
  18 & swiss-international-air-lines & 2513.00 \\ 
  19 & china-southern-airlines & 2481.00 \\ 
  20 & aer-lingus & 2154.00 \\ 
   \hline
\end{tabular}
\caption{Best sentiment analysis results by airline} 
\end{table}
\end{frame}

\begin{frame}
\begin{table}[ht]
\centering
\begin{tabular}{rlr}
  \hline
 & airline & sentiment score \\ 
  \hline
1 & \textcolor{red}{spirit-airlines} & -976.00 \\ 
  2 & \textcolor{red}{frontier-airlines} & -719.00 \\ 
  3 & air-canada-rouge & -640.00 \\ 
  4 & \textcolor{red}{us-airways} & -527.00 \\ 
  5 & \textcolor{red}{allegiant-air} & -509.00 \\ 
  6 & sunwing-airlines & -507.00 \\ 
  7 & royal-air-maroc & -308.00 \\ 
  8 & flybe & -212.00 \\ 
  9 & liat & -207.00 \\ 
  10 & air-europa & -194.00 \\ 
  11 & vueling-airlines & -178.00 \\ 
  12 & precision & -122.00 \\ 
  13 & phuket-air & -111.00 \\ 
  14 & arik-air & -85.00 \\ 
  15 & jetstar-pacific & -82.00 \\ 
  16 & karthago-airlines & -69.00 \\ 
  17 & pal-express & -50.00 \\ 
  18 & biman-bangladesh & -48.00 \\ 
  19 & meridiana & -40.00 \\ 
  20 & mokulele-airlines & -37.00 \\ 
   \hline
\end{tabular}
\caption{Worst sentiment analysis results by airline} 
\end{table}
\end{frame}

<<echo=FALSE,message=FALSE>>=
dbDisconnect(con)
@
\end{document}
